{"version":3,"sources":["components/Add.js","components/Subtract.js","App.js","reportWebVitals.js","index.js"],"names":["Add","props","countUp","className","onClick","Subtract","countDown","App","state","count","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAeeA,EAXF,SAACC,GAAU,IACZC,EAAWD,EAAXC,QAEJ,OACA,qBAAKC,UAAU,YAAf,SACG,wBAAQA,UAAU,UAAUC,QAAUF,EAAtC,sBCMIG,EAXG,SAACJ,GAAU,IACjBK,EAAaL,EAAbK,UAEJ,OACA,qBAAKH,UAAU,YAAf,SACG,wBAAQA,UAAU,SAASC,QAASE,EAApC,2BC6BIC,G,kNA/BbC,MAAQ,CACNC,MAAO,G,EAETP,QAAU,WACR,EAAKQ,SACH,CAACD,MAAQ,EAAKD,MAAMC,MAAQ,K,EAIhCH,UAAU,WACR,EAAKI,SACH,CAACD,MAAO,EAAKD,MAAMC,MAAO,K,uDAM5B,OACE,sBAAKN,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,oDACA,6BAAKQ,KAAKH,MAAMC,WAElB,sBAAKN,UAAU,SAAf,UACE,cAAC,EAAD,CAAKD,QAASS,KAAKT,UACnB,cAAC,EAAD,CAAWI,UAAYK,KAAKL,sB,GA1BpBM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d3d3a3a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\n const Add = (props) =>{\r\n     const {countUp} = props\r\n \r\n        return (\r\n        <div className='container'>\r\n           <button className='center ' onClick ={countUp}> Add </button>\r\n        </div>\r\n\r\n    )\r\n}    \r\n\r\nexport default Add","import React from 'react'\r\n\r\n\r\n\r\n const Subtract = (props) =>{\r\n     const {countDown} = props\r\n \r\n        return (\r\n        <div className='container'>\r\n           <button className='center' onClick={countDown}> Subtract </button>\r\n        </div>\r\n\r\n    )\r\n}    \r\n\r\nexport default Subtract","import React, {Component} from 'react'\nimport Add from './components/Add'\nimport Subtract from './components/Subtract'\nimport '../src/App.css'\n\n\nclass App extends Component {\n  state = {\n    count: 0\n  }\n  countUp = () => {\n    this.setState(\n      {count : this.state.count + 1 }\n    )\n  }\n\n  countDown=() =>{\n    this.setState(\n      {count: this.state.count -1}\n    )\n  }\n\n\n  render () {\n    return (\n      <div className='container'>\n        <div className='center'>\n          <p>Here's your number:</p>\n          <h4>{this.state.count}</h4>\n        </div>\n        <div className='center'>\n          <Add countUp={this.countUp}/>\n          <Subtract  countDown ={this.countDown} />\n        </div>\n      </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}